DoubleLinkedList.java|11|return dummy == dummy; -> return dummy == dummy.getNext();|createList_createNewList_ListIsNotEmpty
DoubleLinkedList.java|24|if(index < 0 || index > size) -> if(index < 0 || index >= size)|pushFront_PushFrontToEmptyList_NumberIncorrect
DoubleLinkedList.java|28|cur = cur.getPrev(); -> cur.getNext();|pushFront_pushFrontData_OneNumberIsCorrect
DoubleLinkedList.java|33|++size; -> ++size;|pushFront_pushFrontData_OneNumberIsCorrect
DoubleLinkedList.java|17|return dummy.getPrev(); -> return dummy.getNext();|pushFront_pushFrontData_headIsCorrect
DoubleLinkedList.java|20|return dummy.getNext(); -> return dummy.getPrev();|pushFront_pushFrontData_tailIsCorrect
DoubleLinkedList.java|41|return insertBefore(getTail(), data); -> return insertAfter(getTail(), data);|pushFront_pushFrontData_tailIsCorrect
DoubleLinkedList.java|44|return insertBefore(getTail(), data); -> return insertBefore(getHead(), data);|pushFront_pushFrontInvertedData_oneNumberIsCorrect
DoubleLinkedList.java|47|node.getPrev().setPrev(node.getNext()); -> node.getPrev().setNext(node.getNext());|deleteNumber_firstNumber_firstNumberIsCorrect
DoubleLinkedList.java|48|node.getNext().setNext(node.getPrev()); -> node.getNext().setPrev(node.getPrev());|deleteNumber_firstNumber_firstNumberIsCorrect


Node.java|13|this.next = prev; -> this.next = next;|pushFront_pushFrontData_tailIsCorrect
Node.java|14|this.prev = next; -> this.prev = next;|pushFront_pushFrontData_tailIsCorrect

DynamicArray.java|11|size = 1; -> size = DefaultSize;|createArray_arrayWithoutData_sizeEqualsDefault
DynamicArray.java|21|if(newSize > 0) -> if(newSize < 0)|resize_SetSizeBiggerThanZero_NewSizeIsCorrect
DynamicArray.java|27|newSize = size; -> size = newSize;|resize_SetSizeBiggerThanZero_NewSizeIsCorrect
DynamicArray.java|30|if(index < 0 || index > size) -> if(index < 0 || index >= size)|setIndex_setIndexEqualsSize_IndexOutOfBounds
DynamicArray.java|35|if(index < 0 || index > size) -> if(index < 0 || index >= size)|getIndex_getIndexEqualsSize_IndexOutOfBounds
DynamicArray.java|40|if(index < 0 || index > size) -> if(index < 0 || index >= size)|insertIndex_IndexIsNotExist_IndexOutOfBounds
DynamicArray.java|15|data = new Object[capacity]; -> data = new Object[size];|setValue_setNewValue_ValueIsCorrect
DynamicArray.java|42|if(capacity > size) { -> if(capacity <= size) {|insert_InsertIndexInNotExistingSlot_ValueIsCorrect
DynamicArray.java|49|data[size] = value; -> data[index] = value;|insert_InsertIndexInNotExistingSlot_ValueIsCorrect
DynamicArray.java|52|if(capacity < size) { -> if(capacity <= size) {|pushBack_pushBackElement_ValueIsCorrect
DynamicArray.java|56|data[capacity] = value; -> data[size] = value;|pushBack_pushBackElement_ValueIsCorrect
DynamicArray.java|60|if(size < 0) -> if(size <= 0)|popBack_popBackElementIsZero_ArrayIsEmpty
DynamicArray.java|66|if(index < 0 || index > size) -> if(index < 0 || index >= size)|remove_removeElementNotExist_IndexOutOfBounds



